@startuml modeldata
title <size:30><b>Diagramme de classes data</b></size>

package app{
 package data {

        package api{

            class CommentaireFirestore{
                - COLLECTION_NAME : String
                + CONTENT : String
                + LIKE_COUNT : String
                + DISLIKE_COUNT : String
                + DATE_CREATED : String
                + PUBLICATION_ID : String

                + getCollection() : CollectionReference
                + getCollectionQueryDesc() : Query
                + getCollectionQueryByPublication(publicationId : String): Query
                + create(commentaire : Commentaire) : Task<DocumentReference>
            }

            class GroupeFirestore{
                - COLLECTION_NAME : String
                + NAME : String
                + DATE_CREATED: String

                + getCollection() : CollectionReference
                + getCollectionQueryDesc() : Query
                + getGroup(nom : String): Task<QuerySnapshot>
                + create(groupe : Groupe): Task<DocumentReference>
            }

            class PublicationFirestore{
                - COLLECTION_NAME : String
                + LIKE_COUNT : String
                + DISLIKE_COUNT : String
                + DATE_CREATED : String
                + TITRE : String
                + VIDEO_ID : String

                + getPublicationsCollection() : CollectionReference
                + createPublication( publication : Publication) : Task<DocumentReference>
                + getAllPublications() : Task<QuerySnapshot>
                + getAllPublicationsDesc() : Query
                + getPublicationRef( uid : String) : DocumentReference
                + getPublicationRef( publication : Publication) : DocumentReference
                + getPublication(uid : String) : Task<DocumentSnapshot>

                + updateTitre(uid : String, titre : String) : Task<Void>
                + updateTitre(publication : Publication, titre : String) : Task<Void>
                + updateVideoId(uid : String, videoId : String) : Task<Void>
                + updateVideoId(publication : Publication, titre : String) : Task<Void>

                - incrementValueByN(publication : Publication, field : String, n : int): Task<Void>
                + incrementLike( publication : Publication) : Task<Void>
                + incrementDislike( publication : Publication) : Task<Void>
                + deletePublication( uid : String) : Task<Void>
            }

            class UserFirestore{
                 - COLLECTION_NAME : String
                 + DISPLAY_NAME : String
                 + EMAIL : String
                 + NOM : String
                 + PRENOM : String
                 + PSEUDO : String
                 + ROLE : String
                 + USER_ID : String

                 + getUsersCollection() : CollectionReference
                 + getUserRef( uid : String) : DocumentReference
                 + getUser(uid: String) : Task<DocumentReference>
                 + getPseudo(pseudo : String) : Task<QuerySnapshot>

                + updateFirstName(uid : String, prenom : String) : Task<Void>
                + updateFirstName(user : User, prenom : String) : Task<Void>
                + updateLastName(uid : String, nom : String) : Task<Void>
                + updateLastName(user : User, nom : String) : Task<Void>
                + updatePseudo(uid : String, pseudo : String) : Task<Void>
                + updatePseudo(user : User, pseudo : String) : Task<Void>

            }

        }
        'fin api'

        package model{

            class Commentaire{
                - uid : String
                - publicationId : String
                - content : String
                - likeCount : Long
                - dislikeCount : Long
                - dateCreated : Date
                - username : String
                - userId : String

                + this : ()
                + this : (publicationId : String, content : String, username : String, userId : String)
                + getUid() : String
                + setUid(uid : String): void
                + getPublicationId() : String
                + setPublicationId(publicationId : String): void
                + getContent() : String
                + setContent(content : String): void
                + getLikeCount() : Long
                + setLikeCount(likeCount : Long) : void
                + getDislikeCount() : Long
                + setDislikeCount(dislikeCount : long) : void
                + getDateCreated() : Date
                + setDateCreated(datecreated : Date) : void
                + getUsername() : String
            }

            class Groupe{
                - uid : String
                - name : String
                - dateCreated : Date

                + this : ()
                + this : (name : String)

                + getUid() : String
                + getName() : String
                + getDateCreated() : Date
            }

            class Publication{
                - uid : String
                - titre : String
                - videoId : String
                - likeCount : Long
                - dislikeCount : Long
                - groupId : String
                - dateCreated : Date

                + this : ()
                + this : (titre : String, videoId : String)
                + this : (titre: String, videoId : String, groupId : String)

                + getUid() : String
                + getTitre() : String
                + getVideoId() : String
                + getLikeCount() : Long
                + getDislikeCount() : Long
                + getDateCreated() : Date
                + getGroupId() : String
                + getMiniatureUrl() : String
                + getVideoUrl() : String
                + toString() : String
            }

            class User{
                - userId : String
                - nom : String
                - prenom : String
                - pseudo : String
                - email : String
                - role : String

                + this : (userId String, displayName : String)
                + this : (nom : String, prenom : String, email : String, r :String)

                + getUserId(): String
                + getDisplayName(): String
                + getPrenom() : String
                + setPrenom(prenom : String): void
                + getNom() : String
                + setNom(nom : String): void
                + getPseudo() : String
                + getEmail(): String
                + getRole() : String
                + setRole(role : String): void
                + toString() : String
            }

            Commentaire -[hidden]- Groupe
            Publication -[hidden]- User

        }
        'fin model'
    }
    'fin data'
}

@enduml
